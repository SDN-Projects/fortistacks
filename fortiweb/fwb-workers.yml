apiVersion: apps/v1
kind: Deployment
metadata:
  name: fortiweb-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fortiweb-worker
  template:
    metadata:
      labels:
        app: fortiweb-worker
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: fweb
        image: fortistackscontainerregistry.azurecr.io/fortinet/fweb
        command: ["/bin/docker_init"]
        securityContext:
          capabilities:
            add: ["NET_ADMIN", "NET_RAW", "SYS_TIME", "SYS_PTRACE" ]
#          allowPrivilegeEscalation: true
          privileged: true
        resources:
          requests:
            cpu: 1
            memory: 2048Mi
          limits:
            cpu: 2
            memory: 4096Mi
        env:
        # Define the environment variable
#          - name: FWB_ADMIN_PASSWORD
#            value: "Fortin3t"
          - name: MGR_MODE_ENV
            value: "client"
          - name: SWARM_NETWORK_ENV
            value: "10.8.0.0/16"
          - name: MGR_SVRIP_ENV
            value: "10.40.0.81"
          - name: SWARM_ENV
            value: "yes"
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
---
apiVersion: v1
kind: Service
metadata:
  name: fortiweb-worker
  labels:
    app: fortiweb-worker
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: NodePort
  # may try nodeport type to see if works better for K8S connector
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
  selector:
    app: fortiweb-worker

### Volume attach fails node VM too small https://docs.microsoft.com/en-us/azure/aks/concepts-storage
##can redo config for the fortiweb workers
