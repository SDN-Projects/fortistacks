heat_template_version: 2016-04-08
## cli deploy
#$ openstack stack create --template heat-minipoc.yaml mini-poc
# on citycloud or with specific inputs file
# openstack stack create --template heat-minipoc.yaml mini-poc -e citycloud-env.yaml
####
# to follow execution:
# openstack stack event list mini-poc --follow
#
# To see the resutls IPs
# openstack stack show mini-poc -c outputs


description: >
  HOT template to create 2 neutron networks, 2 generic VMs a Fortios VM
  in between. No floating ip in this one assume you have direct access (or jump server)
  Used for experimenting (actual traffic) of Fortigate in an openstack environment.


parameters:
 fgtimage:
  type: string
  description: Fortios image
  default: "fgt62"
  constraints:
    - custom_constraint: glance.image
 ubimage:
  type: string
  description: Ubuntu image
  default: "Trusty x86_64"
  constraints:
    - custom_constraint: glance.image
 mgmt_net:
  type: string
  description: My private network
  default: "mgmt"
  constraints:
    - custom_constraint: neutron.network
 vms_flavor:
  type: string
  description: Flavor of the VMs
  default: "m1.small"
  constraints:
    - custom_constraint: nova.flavor
 ub_nic2_name:
  type: string
  description: Name of the second interface on Ubuntu may vary
  default: "eth1"
 fgt_license:
   type: string
   default: |
       -----BEGIN FGT VM LICENSE-----
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdE
       -----END FGT VM LICENSE-----

  
resources:
 fgt_config:
  type: OS::Heat::SoftwareConfig
  properties:
    group: ungrouped
    config: |
      config system admin
      edit "admin"
      set password fortinet
      end
      config system interface
      edit port1
      set mode dhcp
      set allowaccess ping https ssh http snmp fgfm
      set defaultgw enable 
      next
      edit port2
      set mode dhcp
      set allowaccess ping
      set defaultgw disable 
      next
      edit port3
      set mode dhcp
      set allowaccess ping
      set defaultgw disable 
      next
      end
      config firewall policy
      edit 1
      set name "Allow any any"
      set srcintf "any"
      set dstintf "any"
      set srcaddr "all"
      set dstaddr "all"
      set action accept
      set schedule "always"
      set service "ALL"
      set nat enable
      next
      end
      config system global
      set vdom-admin enable
      end


 fgt_license_file:
  type: OS::Heat::SoftwareConfig
  properties:
    group: ungrouped
    config:  {get_param: fgt_license}

 fgt_init:
  type: OS::Heat::MultipartMime
  properties:
    parts:
     - config: {get_resource: fgt_license_file}
     - config: {get_resource: fgt_config}

 ub_config:
  type: OS::Heat::SoftwareConfig
  properties:
    group: ungrouped
    config:
      str_replace:
        template: |
           #cloud-config for citycloud using new schema ens
           chpasswd:
             list: |
               ubuntu:fortinet
             expire: False
           write_files:
             - content: |
                 # Enable dhcp on ens4 some use the new schema
                 auto $nic2
                 iface $nic2 inet dhcp
               path: /etc/network/interfaces.d/51-$nic2.cfg
           package_upgrade: true
           package_reboot_if_required: true
           packages:
             - apache2-utils
             - apache2
             - tcpdump
             - iperf3
           power_state:
             mode: reboot
             message: Rebooting to ensure network conf
             timeout: 10
             condition: True
        params:
          $nic2:  { get_param: ub_nic2_name }
          
 left_net:
    type: OS::Neutron::Net
    properties:
      name: "left"

 left_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: left_net }
      cidr: "10.40.40.0/24"
      gateway_ip: null
      allocation_pools:
        - start: "10.40.40.3"
          end:  "10.40.40.250"
      host_routes: [{"nexthop": "10.40.40.254", "destination": "10.20.20.0/24"}]
 
 right_net:
    type: OS::Neutron::Net
    properties:
      name: "right"

 right_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: right_net }
      cidr: "10.20.20.0/24"
      gateway_ip: null
      allocation_pools:
        - start: "10.20.20.3"
          end:  "10.20.20.250"

 fgt_left_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: left_net }
#      port_security_enabled: false
      allowed_address_pairs:
        - ip_address: "10.20.20.0/24"
      fixed_ips:
        - ip_address: "10.40.40.254"
#https://blueprints.launchpad.net/heat/+spec/add-security-group-to-port may come handy
# Create a mgmt port to apply security group to it instead of global to the VM

 fgt:
  type: OS::Nova::Server
  properties:
   image: { get_param: fgtimage }
   flavor: { get_param: vms_flavor }
   user_data: { get_resource: fgt_init }
   name: FGT
   user_data_format: RAW
   networks:
    - network:  {get_param: mgmt_net }
    - port:  { get_resource: fgt_left_port }
    - subnet:  { get_resource: right_subnet }


 ubleft:
  type: OS::Nova::Server
  properties:
   image: { get_param: ubimage }
   flavor: { get_param: vms_flavor }
   key_name: "default"
   user_data_format: RAW
   user_data: { get_resource: ub_config }
   name: trafleft
   security_groups: [ default ]
   networks:
    - network: { get_param: mgmt_net }
    - network:  { get_resource: left_net }



 ubright:
  type: OS::Nova::Server
  properties:
   image: { get_param: ubimage }
   flavor: { get_param: vms_flavor }
   key_name: "default"
   user_data_format: RAW
   user_data: { get_resource: ub_config }
   name: trafright
   security_groups: [ default ]
   networks:
    - network: { get_param: mgmt_net }
    - network: { get_resource: right_net }


      
outputs:
 fgt-mgmt-ip:
    description: IP address to access of the FGT
    value: { get_attr: [fgt, networks, {get_param: mgmt_net}, 0] }
 left-info:
    description: IP address to access left ubuntu machine 
    value: { get_attr: [ubleft, networks, {get_param: mgmt_net}, 0] }
 right-info:
    description: IP address to access right ubuntu machine 
    value: { get_attr: [ubright, networks, {get_param: mgmt_net}, 0] }
